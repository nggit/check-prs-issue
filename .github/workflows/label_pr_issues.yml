name: Label PRs and Issues
on:
  pull_request:
    types:
      - opened
      - edited
  workflow_dispatch:
jobs:
  check-prs-issue:
    name: Check PRs issue
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    steps:
      - name: Add a comment to a PR and create an issue if the PR does not reference an open issue
        env:
          PR_TITLE: ${{ github.event.pull_request.title }}
          PR_BODY: ${{ github.event.pull_request.body }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          PR_USER: ${{ github.event.pull_request.user.login }}
          PR_COMMENTS_URL: ${{ github.event.pull_request.comments_url }}
          REPO_URL: ${{ github.event.pull_request.base.repo.url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          issue_found=""

          for issue in $( echo "$PR_TITLE $PR_BODY" | grep -o '#[0-9][0-9]*' ); do
            check_issue="$( curl -sH "Authorization: token $GITHUB_TOKEN" "$REPO_URL/issues/${issue#"#"}" )"

            if [ -n "$check_issue" ] && [ "$( echo "$check_issue" | python3 -c "import sys, json; data = json.load(sys.stdin); print(
                  'node_id' in data and 'state' in data and data['node_id'].find('I_') == 0 and data['state'] == 'open'
                )" )" = "True" ]; then
              issue_found="$issue"
              break
            fi
          done

          if [ -n "$issue_found" ]; then
            echo "OK: An open issue ($issue_found) is referenced in your PR ($PR_NUMBER)"
          else
            echo "Failed: No open issues referenced in your PR ($PR_NUMBER)" >&2
            echo "Creating an issue..."

            create_issue="$( curl \
              -sX POST \
              "$REPO_URL/issues" \
              -H "Content-Type: application/json" \
              -H "Authorization: token $GITHUB_TOKEN" \
              -d "{ \"title\": \"$PR_TITLE\", \"body\": \"This issue was created because no open issues referenced in your PR (#$PR_NUMBER).\" }" \
            )"

            if [ -n "$create_issue" ]; then
              ISSUE_NUMBER="$( echo "$create_issue" | python3 -c "import sys, json; data = json.load(sys.stdin); 'number' in data and print(
                data['number']
              )" )"
            fi

            if [ -n "$ISSUE_NUMBER" ]; then
              echo "Issue number $ISSUE_NUMBER created"
            else
              echo "Error: Failed to create an issue" >&2
              exit 1
            fi

            echo "Creating a comment..."
            curl \
              -sX POST \
              "$PR_COMMENTS_URL" \
              -H "Content-Type: application/json" \
              -H "Authorization: token $GITHUB_TOKEN" \
              -d "{ \"body\": \"Error: Hi @$PR_USER, please reference at least an open issue in your PR ($PR_NUMBER). You can fix this by editing your PR body (comments).\
              \\nI opened an issue #$ISSUE_NUMBER because of this and you should reference it too.\" }"

            if [ -n "$PR_BODY" ]; then
              PR_BODY="$( printf "%s" "$PR_BODY" | python3 -c "import sys, json; print(json.dumps(sys.stdin.read())[1:-1])" )"
            else
              PR_BODY="Please edit this."
            fi

            echo "Editing PR $PR_NUMBER..."
            curl \
              -sX POST \
              "$REPO_URL/pulls/$PR_NUMBER" \
              -H "Content-Type: application/json" \
              -H "Authorization: token $GITHUB_TOKEN" \
              -d "{ \"body\": \"$PR_BODY\\nCloses #$ISSUE_NUMBER, \" }"

            exit 1
          fi
